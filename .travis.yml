language: rust

stages:
  - test
  - "Advanced Tests"
  - name: "Deploy Doc"
    if: branch = master
  - "Other Archs"

matrix:
  fast_finish: true
  include:
    - stage: test
      name: stable
      env: CACHE_JOB=stable
      rust: stable
      script:
        - cargo test
    - stage: test
      name: beta
      env: CACHE_JOB=beta
      rust: stable
      script:
        - cargo test
    - stage: test
      name: rustfmt
      env: CACHE_JOB=stable
      rust: stable
      install:
        - rustup component add rustfmt
      script:
        - cargo fmt -- --check
    - stage: test
      name: clippy
      env: CACHE_JOB=stable
      rust: stable
      install:
        - rustup component add clippy
      script:
        - cargo clippy
    - stage: "Advanced Tests"
      name: nightly
      env: CACHE_JOB=nightly
      rust: stable
      script:
        - cargo test
    - stage: "Advanced Tests"
      name: coverage
      env: CACHE_JOB=coverage
      rust: stable
      sudo: required
      install:
        - cargo install cargo-update || echo "cargo-update already installed"
        - cargo install cargo-travis || echo "cargo-travis already installed"
        - cargo install-update -a # update outdated cached binaries
      script:
        - cargo coveralls --exclude-pattern tests
      addons:
        apt:
          packages:
            - libcurl4-openssl-dev
            - libelf-dev
            - libdw-dev
            - binutils-dev
            - cmake
          sources:
            - kalakris-cmake
    - stage: "Deploy Doc"
      rust: stable
      script: 
        - |
          cargo doc --no-deps &&
          echo "<meta http-equiv=refresh content=0;url=bitbucket/index.html>" > target/doc/index.html &&
          git clone https://github.com/davisp/ghp-import.git &&
          ./ghp-import/ghp_import.py -n -p -f -m "Documentation upload" -r https://"$GH_TOKEN"@github.com/"$TRAVIS_REPO_SLUG.git" target/doc &&
          echo "Uploaded documentation"
    - stage: "Other Archs"
      rust: stable
      os: osx
      env: TARGET=x86_64-apple-darwin
      script:
        - cargo test
    - stage: "Other Archs"
      rust: stable
      os: linux
      env: TARGET=i686-unknown-linux-musl
      script:
        - cargo test
    - stage: "Other Archs"
      rust: stable
      os: linux
      env: TARGET=x86_64-unknown-linux-musl
      script:
        - cargo test
    - stage: "Other Archs"
      rust: stable
      os: linux
      env: TARGET=x86_64-unknown-linux-gnu
      script:
        - cargo test

cache:
  - cargo
  - timeout: 1000

before_script:
  - export PATH="$PATH:$HOME/.cargo/bin"
